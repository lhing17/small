---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by G. Seinfeld.
--- DateTime: 2021/6/28 0028 11:58
---

-- 各种几何曲线的合集
local curve = {}

local function cos_angle(angle)
    local rad = math.rad(angle)
    return math.cos(rad)
end

local function sin_angle(angle)
    local rad = math.rad(angle)
    return math.sin(rad)
end

local function r_theta_to_xy(r, theta)
    return r * cos_angle(theta), r * sin_angle(theta)
end

--- 星形线
--- @param a number 距离
--- @param t number 0-360
function curve.star(a, t)
    local x = a * (cos_angle(t)) ^ 3
    local y = a * (sin_angle(t)) ^ 3
    return x, y
end

--- 心脏线
---  @param a number 距离
--- @param t number 0-360
function curve.heart(a, t)
    local r = a * (1 + cos_angle(t))
    return r_theta_to_xy(r, t)
end

--- 八字曲线
--- @param a number 距离
--- @param t number 0-360
function curve.eight(a, t)
    local x = a * cos_angle(t)
    local y = a * sin_angle(5 * t)
    return x, y
end

--- 螺旋曲线
--- @param a number 距离
--- @param t number 0-360
function curve.spiral(a, t)
    local x = a * t / 360 * cos_angle(5 * t / 2)
    local y = a * t / 360 * sin_angle(5 * t / 2)
    return x, y
end

--- 梅花曲线
--- @param a number 距离
--- @param t number 0-360
function curve.flower1(a, t)
    local r = a + (a * 3 / 10 * sin_angle(t * 2.5)) ^ 2
    return r_theta_to_xy(r, t)
end

--- 向日葵曲线
--- @param a number 距离
--- @param t number 0-360
function curve.flower2(a, t)
    local r = a * (3 + sin_angle(t * 30))
    return r_theta_to_xy(r, t)
end

--- 弯月曲线
--- @param a number 距离
--- @param t number 0-360
function curve.moon(a, t)
    local x = a * (cos_angle(t) + cos_angle(2 * t))
    local y = a * (4 * sin_angle(t))
end

--- 小白兔曲线
--- @param a number 距离
--- @param t number 0-360
function curve.rabbit(a, t)
    local theta = t - 90
    local r = a * (cos_angle(t / (1 + (t / 360) ^ 6.5) * t / 60) * 3.5 + 5)
    return r_theta_to_xy(r, theta)
end

--- 大家好曲线
--- @param a number 距离
--- @param t number 0-360
function curve.hello(a, t)
    local theta = t + 180
    local r = a * (cos_angle(360 * (t / 360) ^ 3 * 6) * 2 + 5)
    return r_theta_to_xy(r, theta)
end

--- 五环曲线
--- @param a number 距离
--- @param t number 0-360
function curve.five_circle(a, t)
    local theta = t * 4
    local r = (cos_angle(t * 5) + 1) * a
    return r_theta_to_xy(r, theta)
end

--- 十字渐开线
--- @param a number 距离
--- @param t number 0-360
function curve.cross(a, t)
    local theta = t * 4
    local r = a * t / 360 * (cos_angle(t * 16) * 0.5 * t / 360 + 1)
    return r_theta_to_xy(r, theta)
end

return curve
